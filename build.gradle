apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

//version = '1.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
group = 'yaromudr'

//jar {
//    baseName = "chat"
//}

buildscript {
    ext {
        springBootVersion = '2.0.0.M2'
        dockerVersion = '1.2'
    }
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/libs-release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
    }
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-release" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/snapshot" }
}

ext {
    redisVersion = '0.6'
    jUnit5Version = '5.0.0-M5'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-tomcat:2.0.0.M3")
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-redis")

    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.security:spring-security-messaging")
    compile("org.springframework.session:spring-session")
    
    compile("com.github.kstyrc:embedded-redis:$redisVersion")
    
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.junit.jupiter:junit-jupiter-api:${jUnit5Version}")
}

docker {
    dockerfile = file('src/main/docker/Dockerfile')
    name "${project.group}/chat"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}